读写锁：
读锁(共享锁)：锁之间相互不阻塞。多个客户可以在同一时间读取同一个资源，而互不干扰。
写锁(排他锁)：阻塞其他的写锁和读锁。

锁粒度：提高并发性的方式就是让锁定的对象更具选择性，尽量只锁定需要修改的部分数据，而不是所有的资源。

表锁(table lock)：表锁是MySQL中最基本的锁策略，并且是开销最小的策略。它会锁定整张表。一个用户在对表进行写操作前，需要先获得写锁，这会阻塞其他用户对该表的所有读写操作。

行锁(row lock)：行级锁可以最大程度的支持并发处理(同时带来最大的锁开销)，行级锁只在存储引擎层实现，而不是MySQL服务器层。


加锁也需要消耗系统资源，锁的各种操作，包括获得锁、检查锁是否已经解除、释放锁等，都会增加系统的开销。如果系统花费大量的时间来管理锁，而不是存取数据，那么系统的性能可能会因此受到影响。

锁策略就是在锁的开销和数据的安全性之间寻求平衡。